// <auto-generated />
using System;
using BW_Clinica_Veterinaria.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BW_Clinica_Veterinaria.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240806093808_telefono")]
    partial class telefono
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Animale", b =>
                {
                    b.Property<int>("IdAnimale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnimale"));

                    b.Property<string>("CodiceFiscaleProprietario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Colore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRegistrazione")
                        .HasColumnType("datetime2");

                    b.Property<string>("MicroChipCodice")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipologia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAnimale");

                    b.HasIndex("CodiceFiscaleProprietario");

                    b.ToTable("Animali");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Cassetto", b =>
                {
                    b.Property<int>("IdCassetto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCassetto"));

                    b.Property<int>("NumeroArmadietto")
                        .HasColumnType("int");

                    b.Property<int>("NumeroCassetto")
                        .HasColumnType("int");

                    b.HasKey("IdCassetto");

                    b.ToTable("Cassetti");

                    b.HasData(
                        new
                        {
                            IdCassetto = 1,
                            NumeroArmadietto = 1,
                            NumeroCassetto = 1
                        },
                        new
                        {
                            IdCassetto = 2,
                            NumeroArmadietto = 1,
                            NumeroCassetto = 2
                        },
                        new
                        {
                            IdCassetto = 3,
                            NumeroArmadietto = 1,
                            NumeroCassetto = 3
                        },
                        new
                        {
                            IdCassetto = 4,
                            NumeroArmadietto = 1,
                            NumeroCassetto = 4
                        },
                        new
                        {
                            IdCassetto = 5,
                            NumeroArmadietto = 1,
                            NumeroCassetto = 5
                        },
                        new
                        {
                            IdCassetto = 6,
                            NumeroArmadietto = 2,
                            NumeroCassetto = 1
                        },
                        new
                        {
                            IdCassetto = 7,
                            NumeroArmadietto = 2,
                            NumeroCassetto = 2
                        },
                        new
                        {
                            IdCassetto = 8,
                            NumeroArmadietto = 2,
                            NumeroCassetto = 3
                        },
                        new
                        {
                            IdCassetto = 9,
                            NumeroArmadietto = 2,
                            NumeroCassetto = 4
                        },
                        new
                        {
                            IdCassetto = 10,
                            NumeroArmadietto = 2,
                            NumeroCassetto = 5
                        },
                        new
                        {
                            IdCassetto = 11,
                            NumeroArmadietto = 3,
                            NumeroCassetto = 1
                        },
                        new
                        {
                            IdCassetto = 12,
                            NumeroArmadietto = 3,
                            NumeroCassetto = 2
                        },
                        new
                        {
                            IdCassetto = 13,
                            NumeroArmadietto = 3,
                            NumeroCassetto = 3
                        },
                        new
                        {
                            IdCassetto = 14,
                            NumeroArmadietto = 3,
                            NumeroCassetto = 4
                        },
                        new
                        {
                            IdCassetto = 15,
                            NumeroArmadietto = 3,
                            NumeroCassetto = 5
                        });
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Ditta", b =>
                {
                    b.Property<int>("IdDitta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDitta"));

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recapito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDitta");

                    b.ToTable("Ditte");

                    b.HasData(
                        new
                        {
                            IdDitta = 1,
                            Indirizzo = "Via Roma, 123, 00100 Roma",
                            Nome = "Next",
                            Recapito = "+39 331 1234567"
                        },
                        new
                        {
                            IdDitta = 2,
                            Indirizzo = "Corso Italia, 50, 20100 Milano",
                            Nome = "Premiere",
                            Recapito = "+39 332 2345678"
                        },
                        new
                        {
                            IdDitta = 3,
                            Indirizzo = "Via della Salute, 15, 10100 Torino",
                            Nome = "Royal Canin",
                            Recapito = "+39 333 3456789"
                        },
                        new
                        {
                            IdDitta = 4,
                            Indirizzo = "Piazza Duomo, 1, 80100 Napoli",
                            Nome = "Hills",
                            Recapito = "+39 334 4567890"
                        },
                        new
                        {
                            IdDitta = 5,
                            Indirizzo = "Viale Mazzini, 20, 40100 Bologna",
                            Nome = "Perfect",
                            Recapito = "+39 335 5678901"
                        },
                        new
                        {
                            IdDitta = 6,
                            Indirizzo = "Via Garibaldi, 45, 70100 Bari",
                            Nome = "NBF Lanes",
                            Recapito = "+39 336 6789012"
                        },
                        new
                        {
                            IdDitta = 7,
                            Indirizzo = "Piazza della Libertà, 10, 50100 Firenze",
                            Nome = "Candioli",
                            Recapito = "+39 337 7890123"
                        },
                        new
                        {
                            IdDitta = 8,
                            Indirizzo = "Corso Vittorio Emanuele, 25, 35100 Padova",
                            Nome = "Vetoquinol",
                            Recapito = "+39 338 8901234"
                        },
                        new
                        {
                            IdDitta = 9,
                            Indirizzo = "Via Veneto, 2, 10100 Torino",
                            Nome = "Bayer",
                            Recapito = "+39 339 9012345"
                        },
                        new
                        {
                            IdDitta = 10,
                            Indirizzo = "Viale dei Mille, 30, 80100 Napoli",
                            Nome = "Purina",
                            Recapito = "+39 330 0123456"
                        },
                        new
                        {
                            IdDitta = 11,
                            Indirizzo = "Via Dante, 15, 90100 Palermo",
                            Nome = "Frontline",
                            Recapito = "+39 331 1234567"
                        });
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Prodotto", b =>
                {
                    b.Property<int>("IdProdotto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProdotto"));

                    b.Property<int>("IdCassetto")
                        .HasColumnType("int");

                    b.Property<int>("IdDitta")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProdotto");

                    b.HasIndex("IdCassetto");

                    b.HasIndex("IdDitta");

                    b.ToTable("Prodotti");

                    b.HasData(
                        new
                        {
                            IdProdotto = 1,
                            IdCassetto = 3,
                            IdDitta = 1,
                            Nome = "Next Dry Food Adult Dog",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 2,
                            IdCassetto = 5,
                            IdDitta = 1,
                            Nome = "Next Wet Food Kitten",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 3,
                            IdCassetto = 8,
                            IdDitta = 1,
                            Nome = "Next Treats Dental",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 4,
                            IdCassetto = 12,
                            IdDitta = 1,
                            Nome = "Next Senior Cat Food",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 5,
                            IdCassetto = 10,
                            IdDitta = 1,
                            Nome = "Next Puppy Food",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 6,
                            IdCassetto = 4,
                            IdDitta = 2,
                            Nome = "Premiere Adult Dog Food",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 7,
                            IdCassetto = 1,
                            IdDitta = 2,
                            Nome = "Premiere Kitten Food",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 8,
                            IdCassetto = 7,
                            IdDitta = 2,
                            Nome = "Premiere Pet Shampoo",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 9,
                            IdCassetto = 9,
                            IdDitta = 2,
                            Nome = "Premiere Senior Dog Food",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 10,
                            IdCassetto = 14,
                            IdDitta = 2,
                            Nome = "Premiere Puppy Food",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 11,
                            IdCassetto = 2,
                            IdDitta = 3,
                            Nome = "Royal Canin Gastrointestinal Dog",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 12,
                            IdCassetto = 11,
                            IdDitta = 3,
                            Nome = "Royal Canin Urinary Cat",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 13,
                            IdCassetto = 6,
                            IdDitta = 3,
                            Nome = "Royal Canin Hypoallergenic Dog",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 14,
                            IdCassetto = 13,
                            IdDitta = 3,
                            Nome = "Royal Canin Satiety Cat",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 15,
                            IdCassetto = 15,
                            IdDitta = 3,
                            Nome = "Royal Canin Renal Dog",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 16,
                            IdCassetto = 5,
                            IdDitta = 4,
                            Nome = "Hills Science Diet Adult Dog",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 17,
                            IdCassetto = 10,
                            IdDitta = 4,
                            Nome = "Hills Prescription Diet c/d",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 18,
                            IdCassetto = 3,
                            IdDitta = 4,
                            Nome = "Hills Ideal Balance Cat",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 19,
                            IdCassetto = 7,
                            IdDitta = 4,
                            Nome = "Hills Science Diet Kitten",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 20,
                            IdCassetto = 11,
                            IdDitta = 4,
                            Nome = "Hills Prescription Diet i/d",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 21,
                            IdCassetto = 1,
                            IdDitta = 5,
                            Nome = "Perfect Fit Adult Cat",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 22,
                            IdCassetto = 4,
                            IdDitta = 5,
                            Nome = "Perfect Fit Puppy",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 23,
                            IdCassetto = 8,
                            IdDitta = 5,
                            Nome = "Perfect Fit Senior Dog",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 24,
                            IdCassetto = 6,
                            IdDitta = 5,
                            Nome = "Perfect Fit In-Home Cat",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 25,
                            IdCassetto = 12,
                            IdDitta = 5,
                            Nome = "Perfect Fit Sensitive Digestion",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 26,
                            IdCassetto = 2,
                            IdDitta = 6,
                            Nome = "NBF Lanes Renal N",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 27,
                            IdCassetto = 9,
                            IdDitta = 6,
                            Nome = "NBF Lanes Omega Pet",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 28,
                            IdCassetto = 14,
                            IdDitta = 6,
                            Nome = "NBF Lanes Artikrill",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 29,
                            IdCassetto = 3,
                            IdDitta = 6,
                            Nome = "NBF Lanes Condrostress",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 30,
                            IdCassetto = 7,
                            IdDitta = 6,
                            Nome = "NBF Lanes Epato Plus",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 31,
                            IdCassetto = 1,
                            IdDitta = 7,
                            Nome = "Candioli Florentero",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 32,
                            IdCassetto = 8,
                            IdDitta = 7,
                            Nome = "Candioli Artrovet",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 33,
                            IdCassetto = 13,
                            IdDitta = 7,
                            Nome = "Candioli Stomodine",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 34,
                            IdCassetto = 4,
                            IdDitta = 7,
                            Nome = "Candioli Epato Liquid",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 35,
                            IdCassetto = 6,
                            IdDitta = 7,
                            Nome = "Candioli Calcio Dog",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 36,
                            IdCassetto = 2,
                            IdDitta = 8,
                            Nome = "Vetoquinol Flexadin",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 37,
                            IdCassetto = 11,
                            IdDitta = 8,
                            Nome = "Vetoquinol Zylkene",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 38,
                            IdCassetto = 14,
                            IdDitta = 8,
                            Nome = "Vetoquinol Orozyme",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 39,
                            IdCassetto = 5,
                            IdDitta = 8,
                            Nome = "Vetoquinol Care Senior Dog",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 40,
                            IdCassetto = 10,
                            IdDitta = 8,
                            Nome = "Vetoquinol Samylin",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 41,
                            IdCassetto = 3,
                            IdDitta = 9,
                            Nome = "Bayer Advantix",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 42,
                            IdCassetto = 7,
                            IdDitta = 9,
                            Nome = "Bayer Seresto",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 43,
                            IdCassetto = 12,
                            IdDitta = 9,
                            Nome = "Bayer Drontal",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 44,
                            IdCassetto = 15,
                            IdDitta = 9,
                            Nome = "Bayer Advantage",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 45,
                            IdCassetto = 9,
                            IdDitta = 9,
                            Nome = "Bayer Baytril",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 46,
                            IdCassetto = 2,
                            IdDitta = 10,
                            Nome = "Purina Pro Plan Adult Dog",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 47,
                            IdCassetto = 11,
                            IdDitta = 10,
                            Nome = "Purina ONE Kitten",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 48,
                            IdCassetto = 5,
                            IdDitta = 10,
                            Nome = "Purina Dentalife",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 49,
                            IdCassetto = 7,
                            IdDitta = 10,
                            Nome = "Purina Pro Plan Veterinary Diets EN",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 50,
                            IdCassetto = 14,
                            IdDitta = 10,
                            Nome = "Purina ONE Senior Cat",
                            Tipo = "Alimentare"
                        },
                        new
                        {
                            IdProdotto = 51,
                            IdCassetto = 4,
                            IdDitta = 11,
                            Nome = "Frontline Combo",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 52,
                            IdCassetto = 8,
                            IdDitta = 11,
                            Nome = "Frontline Tri-Act",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 53,
                            IdCassetto = 13,
                            IdDitta = 11,
                            Nome = "Frontline Spray",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 54,
                            IdCassetto = 10,
                            IdDitta = 11,
                            Nome = "Frontline Spot On Cat",
                            Tipo = "Farmaceutico"
                        },
                        new
                        {
                            IdProdotto = 55,
                            IdCassetto = 3,
                            IdDitta = 11,
                            Nome = "Frontline Spot On Dog",
                            Tipo = "Farmaceutico"
                        });
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Proprietario", b =>
                {
                    b.Property<string>("CodiceFiscale")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodiceFiscale");

                    b.ToTable("Proprietari");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Ricovero", b =>
                {
                    b.Property<int>("IdRicovero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRicovero"));

                    b.Property<DateTime>("DataRicovero")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAnimale")
                        .HasColumnType("int");

                    b.HasKey("IdRicovero");

                    b.HasIndex("IdAnimale");

                    b.ToTable("Ricoveri");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Ruolo", b =>
                {
                    b.Property<int>("IdRuolo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRuolo"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRuolo");

                    b.ToTable("Ruoli");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Utente", b =>
                {
                    b.Property<int>("IdUtente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtente"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUtente");

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Utilizzo", b =>
                {
                    b.Property<int>("IdUtilizzo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtilizzo"));

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUtilizzo");

                    b.ToTable("Utilizzi");

                    b.HasData(
                        new
                        {
                            IdUtilizzo = 1,
                            Descrizione = "Otite"
                        },
                        new
                        {
                            IdUtilizzo = 2,
                            Descrizione = "Raffreddore"
                        },
                        new
                        {
                            IdUtilizzo = 3,
                            Descrizione = "Dermatite"
                        },
                        new
                        {
                            IdUtilizzo = 4,
                            Descrizione = "Intestinale"
                        },
                        new
                        {
                            IdUtilizzo = 5,
                            Descrizione = "Supporto immunitario"
                        },
                        new
                        {
                            IdUtilizzo = 6,
                            Descrizione = "Convalescenza"
                        },
                        new
                        {
                            IdUtilizzo = 7,
                            Descrizione = "Gravidanza e allattamento"
                        },
                        new
                        {
                            IdUtilizzo = 8,
                            Descrizione = "Boli di pelo"
                        },
                        new
                        {
                            IdUtilizzo = 9,
                            Descrizione = "Vermi"
                        },
                        new
                        {
                            IdUtilizzo = 10,
                            Descrizione = "Funghi"
                        },
                        new
                        {
                            IdUtilizzo = 11,
                            Descrizione = "Antibiotico"
                        },
                        new
                        {
                            IdUtilizzo = 12,
                            Descrizione = "Antivirale"
                        },
                        new
                        {
                            IdUtilizzo = 13,
                            Descrizione = "Cura orale"
                        },
                        new
                        {
                            IdUtilizzo = 14,
                            Descrizione = "Urinario"
                        },
                        new
                        {
                            IdUtilizzo = 15,
                            Descrizione = "Cardiaco"
                        },
                        new
                        {
                            IdUtilizzo = 16,
                            Descrizione = "Energetico"
                        },
                        new
                        {
                            IdUtilizzo = 17,
                            Descrizione = "Mobilità"
                        },
                        new
                        {
                            IdUtilizzo = 18,
                            Descrizione = "Vista"
                        },
                        new
                        {
                            IdUtilizzo = 19,
                            Descrizione = "Neurologico"
                        },
                        new
                        {
                            IdUtilizzo = 20,
                            Descrizione = "Calmante"
                        },
                        new
                        {
                            IdUtilizzo = 21,
                            Descrizione = "Epatite"
                        },
                        new
                        {
                            IdUtilizzo = 22,
                            Descrizione = "Controllo del peso"
                        },
                        new
                        {
                            IdUtilizzo = 23,
                            Descrizione = "Cibo Secco"
                        },
                        new
                        {
                            IdUtilizzo = 24,
                            Descrizione = "Cibo umido"
                        },
                        new
                        {
                            IdUtilizzo = 25,
                            Descrizione = "Snack"
                        },
                        new
                        {
                            IdUtilizzo = 26,
                            Descrizione = "Inappetenza"
                        },
                        new
                        {
                            IdUtilizzo = 27,
                            Descrizione = "Kitten"
                        },
                        new
                        {
                            IdUtilizzo = 28,
                            Descrizione = "Puppy"
                        },
                        new
                        {
                            IdUtilizzo = 29,
                            Descrizione = "Reni"
                        });
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Vendita", b =>
                {
                    b.Property<int>("IdVendita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVendita"));

                    b.Property<string>("CodiceFiscaleCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProdotto")
                        .HasColumnType("int");

                    b.Property<string>("Ricetta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdVendita");

                    b.HasIndex("CodiceFiscaleCliente");

                    b.HasIndex("IdProdotto");

                    b.ToTable("Vendite");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Visita", b =>
                {
                    b.Property<int>("IdVista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVista"));

                    b.Property<string>("CuraPrescritta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Esame")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAnimale")
                        .HasColumnType("int");

                    b.HasKey("IdVista");

                    b.HasIndex("IdAnimale");

                    b.ToTable("Visite");
                });

            modelBuilder.Entity("ProdottoUtilizzo", b =>
                {
                    b.Property<int>("ProdottiIdProdotto")
                        .HasColumnType("int");

                    b.Property<int>("UtilizziIdUtilizzo")
                        .HasColumnType("int");

                    b.HasKey("ProdottiIdProdotto", "UtilizziIdUtilizzo");

                    b.HasIndex("UtilizziIdUtilizzo");

                    b.ToTable("ProdottoUtilizzo", (string)null);
                });

            modelBuilder.Entity("RuoloUtente", b =>
                {
                    b.Property<int>("RuoliIdRuolo")
                        .HasColumnType("int");

                    b.Property<int>("UtentiIdUtente")
                        .HasColumnType("int");

                    b.HasKey("RuoliIdRuolo", "UtentiIdUtente");

                    b.HasIndex("UtentiIdUtente");

                    b.ToTable("UtenteRuolo", (string)null);
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Animale", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Proprietario", "Proprietario")
                        .WithMany("Animali")
                        .HasForeignKey("CodiceFiscaleProprietario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Prodotto", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Cassetto", "Cassetto")
                        .WithMany("Prodotti")
                        .HasForeignKey("IdCassetto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Ditta", "Ditta")
                        .WithMany()
                        .HasForeignKey("IdDitta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cassetto");

                    b.Navigation("Ditta");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Ricovero", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Animale", "Animale")
                        .WithMany()
                        .HasForeignKey("IdAnimale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animale");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Vendita", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Proprietario", "Proprietario")
                        .WithMany()
                        .HasForeignKey("CodiceFiscaleCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Prodotto", "Prodotto")
                        .WithMany("Vendite")
                        .HasForeignKey("IdProdotto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prodotto");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Visita", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Animale", "Animale")
                        .WithMany()
                        .HasForeignKey("IdAnimale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animale");
                });

            modelBuilder.Entity("ProdottoUtilizzo", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Prodotto", null)
                        .WithMany()
                        .HasForeignKey("ProdottiIdProdotto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Utilizzo", null)
                        .WithMany()
                        .HasForeignKey("UtilizziIdUtilizzo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RuoloUtente", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Ruolo", null)
                        .WithMany()
                        .HasForeignKey("RuoliIdRuolo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Utente", null)
                        .WithMany()
                        .HasForeignKey("UtentiIdUtente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Cassetto", b =>
                {
                    b.Navigation("Prodotti");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Prodotto", b =>
                {
                    b.Navigation("Vendite");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Proprietario", b =>
                {
                    b.Navigation("Animali");
                });
#pragma warning restore 612, 618
        }
    }
}
