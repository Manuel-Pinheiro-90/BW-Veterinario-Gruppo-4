// <auto-generated />
using System;
using BW_Clinica_Veterinaria.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BW_Clinica_Veterinaria.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240805145644_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Animale", b =>
                {
                    b.Property<int>("IdAnimale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnimale"));

                    b.Property<string>("CodiceFiscaleProprietario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Colore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRegistrazione")
                        .HasColumnType("datetime2");

                    b.Property<string>("MicroChipCodice")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipologia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAnimale");

                    b.HasIndex("CodiceFiscaleProprietario");

                    b.ToTable("Animali");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Cassetto", b =>
                {
                    b.Property<int>("IdCassetto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCassetto"));

                    b.Property<int>("NumeroArmadietto")
                        .HasColumnType("int");

                    b.Property<int>("NumeroCassetto")
                        .HasColumnType("int");

                    b.HasKey("IdCassetto");

                    b.ToTable("Cassetti");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Ditta", b =>
                {
                    b.Property<int>("IdDitta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDitta"));

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recapito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDitta");

                    b.ToTable("Ditte");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Prodotto", b =>
                {
                    b.Property<int>("IdProdotto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProdotto"));

                    b.Property<int>("IdCassetto")
                        .HasColumnType("int");

                    b.Property<int>("IdDitta")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProdotto");

                    b.HasIndex("IdCassetto");

                    b.HasIndex("IdDitta");

                    b.ToTable("Prodotti");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Proprietario", b =>
                {
                    b.Property<string>("CodiceFiscale")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroTelefono")
                        .HasColumnType("int");

                    b.HasKey("CodiceFiscale");

                    b.ToTable("Proprietari");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Ricovero", b =>
                {
                    b.Property<int>("IdRicovero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRicovero"));

                    b.Property<DateTime>("DataRicovero")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAnimale")
                        .HasColumnType("int");

                    b.HasKey("IdRicovero");

                    b.HasIndex("IdAnimale");

                    b.ToTable("Ricoveri");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Ruolo", b =>
                {
                    b.Property<int>("IdRuolo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRuolo"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRuolo");

                    b.ToTable("Ruoli");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Utente", b =>
                {
                    b.Property<int>("IdUtente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtente"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUtente");

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Utilizzo", b =>
                {
                    b.Property<int>("IdUtilizzo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtilizzo"));

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUtilizzo");

                    b.ToTable("Utilizzi");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Vendita", b =>
                {
                    b.Property<int>("IdVendita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVendita"));

                    b.Property<string>("CodiceFiscaleCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdProdotto")
                        .HasColumnType("int");

                    b.Property<string>("Ricetta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdVendita");

                    b.HasIndex("CodiceFiscaleCliente");

                    b.HasIndex("IdProdotto");

                    b.ToTable("Vendite");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Visita", b =>
                {
                    b.Property<int>("IdVista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVista"));

                    b.Property<string>("CuraPrescritta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Esame")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAnimale")
                        .HasColumnType("int");

                    b.HasKey("IdVista");

                    b.HasIndex("IdAnimale");

                    b.ToTable("Visite");
                });

            modelBuilder.Entity("ProdottoUtilizzo", b =>
                {
                    b.Property<int>("ProdottiIdProdotto")
                        .HasColumnType("int");

                    b.Property<int>("UtilizziIdUtilizzo")
                        .HasColumnType("int");

                    b.HasKey("ProdottiIdProdotto", "UtilizziIdUtilizzo");

                    b.HasIndex("UtilizziIdUtilizzo");

                    b.ToTable("ProdottoUtilizzo", (string)null);
                });

            modelBuilder.Entity("RuoloUtente", b =>
                {
                    b.Property<int>("RuoliIdRuolo")
                        .HasColumnType("int");

                    b.Property<int>("UtentiIdUtente")
                        .HasColumnType("int");

                    b.HasKey("RuoliIdRuolo", "UtentiIdUtente");

                    b.HasIndex("UtentiIdUtente");

                    b.ToTable("UtenteRuolo", (string)null);
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Animale", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Proprietario", "Proprietario")
                        .WithMany("Animali")
                        .HasForeignKey("CodiceFiscaleProprietario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Prodotto", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Cassetto", "Cassetto")
                        .WithMany("Prodotti")
                        .HasForeignKey("IdCassetto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Ditta", "Ditta")
                        .WithMany()
                        .HasForeignKey("IdDitta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cassetto");

                    b.Navigation("Ditta");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Ricovero", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Animale", "Animale")
                        .WithMany()
                        .HasForeignKey("IdAnimale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animale");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Vendita", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Proprietario", "Proprietario")
                        .WithMany()
                        .HasForeignKey("CodiceFiscaleCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Prodotto", "Prodotto")
                        .WithMany("Vendite")
                        .HasForeignKey("IdProdotto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prodotto");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Visita", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Animale", "Animale")
                        .WithMany()
                        .HasForeignKey("IdAnimale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animale");
                });

            modelBuilder.Entity("ProdottoUtilizzo", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Prodotto", null)
                        .WithMany()
                        .HasForeignKey("ProdottiIdProdotto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Utilizzo", null)
                        .WithMany()
                        .HasForeignKey("UtilizziIdUtilizzo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RuoloUtente", b =>
                {
                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Ruolo", null)
                        .WithMany()
                        .HasForeignKey("RuoliIdRuolo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BW_Clinica_Veterinaria.Models.Entity.Utente", null)
                        .WithMany()
                        .HasForeignKey("UtentiIdUtente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Cassetto", b =>
                {
                    b.Navigation("Prodotti");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Prodotto", b =>
                {
                    b.Navigation("Vendite");
                });

            modelBuilder.Entity("BW_Clinica_Veterinaria.Models.Entity.Proprietario", b =>
                {
                    b.Navigation("Animali");
                });
#pragma warning restore 612, 618
        }
    }
}
